{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/BackDrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logOutTimer","MainHeader","children","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","NavLinks","auth","useContext","to","exact","MainNavigation","useState","drawerIsOpen","setDrawerOpen","closeDrawer","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Authentication","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"6GAAA,6CAEaA,EAAcC,wBAAc,CACvCC,YAAY,EACZC,OAAQ,KACRC,MAAO,KACPC,MAAO,aACPC,OAAQ,gB,+BCPV,0BAYeC,IARQ,SAACC,GACtB,OACE,yBAAKC,UAAS,UAAKD,EAAME,WAAa,6BACpC,yBAAKD,UAAU,qB,6BCPrB,0CAYeE,IAPE,SAACH,GAChB,OAAOI,IAASC,aACd,yBAAKJ,UAAU,WAAWK,QAASN,EAAMM,UACzCC,SAASC,eAAe,oB,sNCNxBC,E,6DCMWC,G,YAJI,SAACV,GAClB,OAAO,4BAAQC,UAAU,eAAeD,EAAMW,Y,QCmBjCC,G,MAlBI,SAACZ,GAClB,IAAMa,EACJ,kBAACC,EAAA,EAAa,CACZC,GAAIf,EAAMgB,KACVC,QAAS,IACTC,WAAW,gBACXC,cAAY,EACZC,eAAa,GAEb,2BAAOnB,UAAU,cAAcK,QAASN,EAAMM,SAC3CN,EAAMW,WAKb,OAAOP,IAASC,aAAaQ,EAASN,SAASC,eAAe,kB,QCmBjDa,G,MAnCE,SAACrB,GAChB,IAAMsB,EAAOC,qBAAW/B,KAExB,OACE,wBAAIS,UAAU,aACZ,4BACE,kBAAC,IAAO,CAACuB,GAAG,IAAIC,OAAK,iBAItBH,EAAK5B,YACJ,4BACE,kBAAC,IAAO,CAAC8B,GAAE,WAAMF,EAAK3B,OAAM,YAAU,cAGzC2B,EAAK5B,YACJ,4BACE,kBAAC,IAAO,CAAC8B,GAAG,eAAa,gBAI3BF,EAAK5B,YACL,4BACE,kBAAC,IAAO,CAAC8B,GAAG,QAAM,iBAGrBF,EAAK5B,YACJ,4BACE,4BAAQY,QAASgB,EAAKxB,QAAO,c,QCcxB4B,EAtCQ,SAAC1B,GACtB,MAAsC2B,oBAAS,GAAM,mBAA9CC,EAAY,KAAEC,EAAa,KAM5BC,EAAc,WAClBD,GAAc,IAGhB,OACE,kBAAC,IAAME,SAAQ,KACZH,EAAe,kBAAC,IAAQ,CAACtB,QAASwB,IAAkB,KAErD,kBAAC,EAAU,CAACd,KAAMY,EAActB,QAASwB,GACvC,yBAAK7B,UAAU,+BACb,kBAAC,EAAQ,QAIb,kBAAC,EAAU,KACT,4BAAQA,UAAU,4BAA4BK,QAnBjC,WACjBuB,GAAc,KAmBR,+BACA,+BACA,gCAEF,wBAAI5B,UAAU,0BACZ,kBAAC,IAAI,CAACuB,GAAG,KAAG,gBAEd,yBAAKvB,UAAU,+BACb,kBAAC,EAAQ,U,QCrBb+B,EAAQC,IAAMC,MAAK,kBAAM,gCACzBC,EAAWF,IAAMC,MAAK,kBAAM,sDAC5BE,EAAaH,IAAMC,MAAK,kBAAM,gCAC9BG,EAAcJ,IAAMC,MAAK,kBAAM,gCAC/BI,EAAiBL,IAAMC,MAAK,kBAAM,sDAiFzBK,EA/EH,WACV,IACIC,EADJ,ELtBqB,WACrB,MAA0Bb,oBAAS,GAAM,mBAAlC/B,EAAK,KAAE6C,EAAQ,KACtB,EAAsDd,qBAAU,mBAAzDe,EAAmB,KAAEC,EAAsB,KAClD,EAA4BhB,oBAAS,GAAM,mBAApChC,EAAM,KAAEiD,EAAS,KAElB/C,EAAQgD,uBAAY,SAAClD,EAAQC,EAAOkD,GACxC,IAAMJ,EACJI,GAAkB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACpDL,EAAuBD,GACvBD,EAAS7C,GACTgD,EAAUjD,GACVsD,aAAaC,QACX,WACAC,KAAKC,UAAU,CACbzD,SACAC,QACAyD,WAAYX,EAAoBY,mBAGnC,IAEGxD,EAAS+C,uBAAY,WACzBJ,EAAS,MACTE,EAAuB,MACvBC,EAAU,MAEVK,aAAaM,WAAW,cACvB,IA6BH,OA3BAC,qBAAU,WACR,GAAI5D,EAAQ8C,EAAqB,CAC/B,IAAMe,EACJf,EAAoBM,WAAY,IAAID,MAAOC,UAE7CvC,EAAciD,WAAW5D,EAAQ2D,QAEjCE,aAAalD,KAEd,CAACb,EAAOE,EAAQ4C,IAEnBc,qBAAU,WACR,IAAMI,EAAaT,KAAKU,MAAMZ,aAAaa,QAAQ,aAGjDF,GACAA,EAAWhE,OACX,IAAImD,KAAKa,EAAWP,YAAc,IAAIN,MAEtClD,EACE+D,EAAWjE,OACXiE,EAAWhE,MACX,IAAImD,KAAKa,EAAWP,eAGvB,CAACxD,IAEG,CAAED,QAAOC,QAAOC,SAAQH,UKlCUoE,GAAjCnE,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAM,EAANA,OAAQH,EAAM,EAANA,OAsC9B,OAlCE6C,EADE5C,EAEA,kBAAC,IAAM,KACL,kBAAC,IAAK,CAACoE,KAAK,IAAIvC,OAAK,GACnB,kBAACO,EAAK,OAER,kBAAC,IAAK,CAACgC,KAAK,mBACV,kBAAC5B,EAAU,OAEb,kBAAC,IAAK,CAAC4B,KAAK,cAAcvC,OAAK,GAC7B,kBAACU,EAAQ,OAEX,kBAAC,IAAK,CAAC6B,KAAK,oBACV,kBAAC3B,EAAW,OAEd,kBAAC,IAAQ,CAACb,GAAG,OAKf,kBAAC,IAAM,KACL,kBAAC,IAAK,CAACwC,KAAK,IAAIvC,OAAK,GACnB,kBAACO,EAAK,OAER,kBAAC,IAAK,CAACgC,KAAK,kBAAkBvC,OAAK,GACjC,kBAACW,EAAU,OAEb,kBAAC,IAAK,CAAC4B,KAAK,QAAQvC,OAAK,GACvB,kBAACa,EAAc,OAEjB,kBAAC,IAAQ,CAACd,GAAG,WAMjB,kBAAC,IAAYyC,SAAQ,CACnBC,MAAO,CAAExE,aAAcE,EAAOA,QAAOD,SAAQE,QAAOC,WAEpD,kBAAC,IAAM,KACL,kBAAC,EAAc,MACf,8BACE,kBAAC,WAAQ,CACPqE,SACE,yBAAKlE,UAAU,UACb,kBAACF,EAAA,EAAc,QAInB,kBAAC,IAAM,KAAEyC,QCxErBpC,IAASgE,OAAO,kBAAC,EAAG,MAAK7D,SAASC,eAAe,W","file":"static/js/main.964cad91.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from \"react\";\r\n\r\nimport \"./LoadingSpinner.css\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  return (\r\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./BackDrop.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById(\"backdrop-hook\")\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logOutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((userId, token, expirationDate) => {\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    setToken(token);\r\n    setUserId(userId);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token & tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n\r\n      logOutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logOutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames=\"slide-in-left\"\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport \"./NavLinks.css\";\r\nconst NavLinks = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACES</NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>Logout</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./MainNavigation.css\";\r\nimport MainHeader from \"./MainHeader\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport Backdrop from \"../UIElements/BackDrop\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerOpen] = useState(false);\r\n\r\n  const openDrawer = () => {\r\n    setDrawerOpen(true);\r\n  };\r\n\r\n  const closeDrawer = () => {\r\n    setDrawerOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen ? <Backdrop onClick={closeDrawer} /> : null}\r\n\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawer}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\">Your Places</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\n// import Users from \"./users/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Authentication from \"./users/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\n//lazy loading helps in loading the code when it requested not befor the request\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Authentication = React.lazy(() => import(\"./users/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\">\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Authentication />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: !!token, token, userId, login, logout }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            <Switch>{routes}</Switch>\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\n/* <Route path=\"/\" exact>\n              <Users />\n            </Route>\n            <Route path=\"/:userId/places\" exact>\n              <UserPlaces />\n            </Route>\n            <Route path=\"/places/new\" exact>\n              <NewPlace />\n            </Route>\n            <Route path=\"/places/:placeId\">\n              <UpdatePlace />\n            </Route>\n            <Route path=\"/auth\">\n              <Authorization />\n            </Route>\n            <Redirect to=\"/\" />\n         */\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}